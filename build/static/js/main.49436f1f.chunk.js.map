{"version":3,"sources":["components/Search.jsx","components/Books.jsx","components/Loadmore.jsx","components/Loading.jsx","components/ItemBook.jsx","App.js","store/booksReducer.js","store/index.js","index.js"],"names":["Search","dispatch","useDispatch","books","useSelector","state","event","a","loadingBooks","preventDefault","result","fetch","search","apiKey","sorting","then","response","json","console","log","type","payload","renderBooks","className","onSubmit","onChange","book","target","value","placeholder","categories","length","totalItems","Books","map","index","to","volumeInfo","title","src","undefined","imageLinks","thumbnail","alt","slice","authors","Loadmore","onClick","Loading","loading","ItemBook","props","infoBook","textSnippet","searchInfo","item","App","basename","exact","path","loadMore","initialState","process","number","stepSearch","rootReducer","combineReducers","action","items","step","newState","i","push","includes","store","createStore","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49436f1f.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nexport default function Search() {\r\n    const dispatch = useDispatch();\r\n    const books = useSelector(state => state.books);\r\n\r\n    const handleChange = (event) => {\r\n        const book = event.target.value;\r\n        dispatch({type: 'INPUT_CHANGE', payload: book});\r\n      }\r\n    \r\n    async function handleSubmit(event) {\r\n        loadingBooks();\r\n        event.preventDefault();\r\n        let result = [];\r\n        await fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=40&orderBy=${books.sorting}`)\r\n            .then(response => response.json())\r\n            .then(json => result = json)\r\n        console.log(result)\r\n        dispatch({type: 'SEARCH', payload: result});\r\n        renderBooks();\r\n    }\r\n\r\n    const sortingChange = (event) => {\r\n        const value = event.target.value;\r\n        dispatch({type: 'SORTING', payload: value});\r\n    }\r\n\r\n    const categoriesChange = (event) => {\r\n        const value = event.target.value;\r\n        dispatch({type: 'CATEGORIES_CHANGE', payload: value});\r\n    }\r\n\r\n    const renderBooks = () => {\r\n        dispatch({type: 'RENDER_BOOKS'});\r\n        loadingBooks();\r\n    }\r\n\r\n    const loadingBooks = () => {\r\n        dispatch({type: 'LOADING'})\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <h1 className=\"search-title\">Search for books</h1>          \r\n            <form className='search-form' onSubmit={handleSubmit}>\r\n                <input className='search-input' onChange={handleChange} type=\"text\" placeholder=\"Search for Books\"/>\r\n                <button className='search-btn' type=\"submit\">Search</button>\r\n            </form>\r\n\r\n                                                                                                            \r\n            <div className='search-filter'>\r\n                <h3>sorting:</h3>\r\n                <select className='search-select' value={books.sorting} onChange={sortingChange} >\r\n                    <option value=\"relevance\">relevance</option>\r\n                    <option value=\"newest\">newest</option>\r\n                </select>\r\n\r\n                <h3>categories:</h3>\r\n                <select className='search-select' value={books.categories} onChange={categoriesChange} >\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Art\">Art</option>\r\n                    <option value=\"Biography & Autobiography\">Biography</option>\r\n                    <option value=\"Computers\">Computers</option>\r\n                    <option value=\"History\">History</option>\r\n                    <option value=\"Medical\">Medical</option>\r\n                    <option value=\"Poetry\">Poetry</option>\r\n                </select>\r\n            </div>\r\n            <h2>Found {books.books.length > 0 ? books.totalItems : '0'} results</h2>\r\n        </div>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Books() {\r\n\r\n    const books = useSelector(state => state.books);\r\n\r\n    return (\r\n        <div className=\"books_wrapp\">\r\n            {books.books.map((book, index) => (\r\n                <Link className=\"link-book\" to={`${book.volumeInfo.title}`} key={index}>\r\n                    <img \r\n                        src={book.volumeInfo.imageLinks !== undefined ?\r\n                        book.volumeInfo.imageLinks.thumbnail : './img/noPicture.png'} \r\n                        alt={book.volumeInfo.title}\r\n                    />\r\n                    <div className=\"book_info\">\r\n                        <h2 className=\"book_title\">\r\n                            {book.volumeInfo.title === undefined ? '' : book.volumeInfo.title.length < 60?\r\n                            book.volumeInfo.title : book.volumeInfo.title.slice(0,60) + '...'}\r\n                        </h2>\r\n                        <p className=\"book_categories\">{book.volumeInfo.categories !== undefined ? book.volumeInfo.categories : ''}</p>\r\n                        <p className=\"book_authors\">{book.volumeInfo.authors !== undefined ? book.volumeInfo.authors[0] : ''}</p>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import { useDispatch } from 'react-redux';\r\n\r\nexport default function Loadmore() {\r\n    const dispatch = useDispatch();\r\n    const showBooks = () => {\r\n        dispatch({type: 'RENDER_BOOKS'});\r\n    }\r\n    \r\n    return (\r\n        <div  className=\"loadmore-wrapp\">\r\n            <button className=\"loadmore-btn\" onClick={showBooks}>Load more</button>\r\n        </div>\r\n    );\r\n}","\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Loading() {\r\n    const loading = useSelector(state => state.books.loading)\r\n    return (\r\n        <div className={`loading_wrapp ${loading ? 'loading_wrapp-active' : ''}`}>\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function ItemBook(props) {\r\n    const infoBook = props.book.volumeInfo;\r\n    const textSnippet = props.book.searchInfo?.textSnippet;\r\n    return(\r\n        <div className=\"section-itemBook\">\r\n        \r\n           <div className=\"itemBook\">\r\n               <Link className=\"itemBook-link\" to=\"/\">back</Link>\r\n                <img className=\"itemBook-img\" src={infoBook.imageLinks !== undefined ?\r\n                        infoBook.imageLinks.thumbnail : './img/noPicture.png'}\r\n                        alt=\"img\"/>\r\n                <div className=\"itemBook-info\">\r\n                    <h1 className=\"itemBook-title\">{infoBook?.title}</h1>\r\n                    <p className=\"itemBook-categories\">{infoBook?.categories}</p>\r\n                    <p className=\"itemBook-authors\">{infoBook?.authors.map(item => item + ', ')}</p>\r\n                </div>\r\n                <div className=\"itemBook-wrapp\">\r\n                    <p className=\"itemBook-textSnippet\">{textSnippet}</p>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    );\r\n}","\nimport { useSelector } from 'react-redux';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//components\nimport Search from './components/Search';\nimport Books from './components/Books';\nimport Loadmore from './components/Loadmore';\nimport Loading from './components/Loading';\nimport ItemBook from './components/ItemBook';\n\n\n\n\nfunction App() {\n\n  const books = useSelector(state => state.books);\n\n  return(\n    <Router basename=\"/Google-books\">\n      <div className=\"App\">\n        \n        <Switch>\n          <Route exact path=\"/\">\n              <Search />\n              <Books />\n              {books.loadMore ? <Loadmore /> : ''}\n              <Loading />\n          </Route>\n          {books.books.map((book, index) =>\n            <Route key={index} path={`/${book.volumeInfo.title}`}>\n              <ItemBook book={book}/>\n            </Route>\n          )}\n        </Switch>\n    \n\n      \n        \n      </div>\n    </Router>\n  );\n}\n\n// function App() {\n\n//   const dispatch = useDispatch();\n//   const books = useSelector(state => state.books);\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (event) => {\n//     const book = event.target.value;\n//     dispatch({type: 'INPUT_CHANGE', payload: book});\n//   }\n\n//   async function handleSubmit(event) {\n//     setLoading(true);\n//     event.preventDefault();\n//     let result = [];\n//     await fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=30&orderBy=${books.sorting}`)\n//       .then(response => response.json())\n//       .then(json => result = json.items)\n//       .then(() => setLoading(false))\n    \n//     dispatch({type: 'SEARCH', payload: result});\n//     renderBooks();\n//   }\n\n//   const sortingChange = (event) => {\n//     const value = event.target.value;\n//     dispatch({type: 'SORTING', payload: value});\n//   }\n\n//   const categoriesChange = (event) => {\n//     const value = event.target.value;\n//     dispatch({type: 'CATEGORIES_CHANGE', payload: value});\n//   }\n\n//   const renderBooks = () => {\n//     dispatch({type: 'RENDER_BOOKS'});\n//   }\n\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <input onChange={handleChange} className=\"input\" type=\"text\" placeholder=\"Search for Books\"/>\n//         <button type=\"submit\">Search</button>\n//       </form>\n\n                                                                                                         \n//       <select value={books.sorting} onChange={sortingChange} >\n//         <option value=\"relevance\">relevance</option>\n//         <option value=\"newest\">newest</option>\n//       </select>\n\n//       <select value={books.categories} onChange={categoriesChange} >\n//         <option value=\"All\">All</option>\n//         <option value=\"Art\">Art</option>\n//         <option value=\"Biography & Autobiography\">Biography</option>\n//         <option value=\"Computers\">Computers</option>\n//         <option value=\"History\">History</option>\n//         <option value=\"Medical\">Medical</option>\n//         <option value=\"Poetry\">Poetry</option>\n//       </select>\n\n//       {books.books.map((book, index) => (\n//         <div key={index}>\n//           <h4>{book.volumeInfo.categories}</h4>\n//           <img src={book.volumeInfo.imageLinks?.thumbnail} alt={book.volumeInfo.title}/>\n//         </div>\n//       ))}\n//       {loading ? <h2>loading...</h2> : ''}\n//     </div>\n//   );\n// }\n\nexport default App;\n","const initialState = {\r\n    totalItems: 0,\r\n    search: '',\r\n    result: [],\r\n    books: [],\r\n    apiKey: process.env.REACT_APP_UNSPLASH_KEY,\r\n    categories: 'All',\r\n    sorting: 'relevance',\r\n    loading: false,\r\n    number: 0,\r\n    loadMore: false,\r\n    stepSearch: 0\r\n}\r\n\r\nexport const booksReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'INPUT_CHANGE':\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            };\r\n\r\n        case 'SEARCH':\r\n            return {\r\n                ...state,\r\n                result: action.payload.items,\r\n                totalItems: action.payload.totalItems,\r\n                number: 0,\r\n                books: [],\r\n                step: 0\r\n            };\r\n\r\n        case 'SORTING':\r\n            return {\r\n                ...state,\r\n                sorting: action.payload\r\n            };\r\n\r\n        case 'CATEGORIES_CHANGE':\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            };\r\n\r\n        // case 'RENDER_BOOKS':\r\n        //     if(state.categories === 'All') {\r\n        //         return {...state, books: state.result}\r\n        //     } else {\r\n        //         const newState = [];\r\n        //         for(let i = 0; i < state.result.length; i++) {\r\n        //             if(state.result[i].volumeInfo?.categories !== undefined && state.result[i].volumeInfo?.categories.includes(state.categories)) { \r\n        //                 newState.push(state.result[i]);\r\n        //             }\r\n        //         }\r\n        //         return {...state, books: newState};\r\n        //     }\r\n\r\n        \r\n        case 'LOADING': {\r\n                return {...state, loading: !state.loading};\r\n        }\r\n\r\n\r\n        case 'RENDER_BOOKS':\r\n            let newState = [];\r\n            if(state.books.length !== 0) {\r\n                newState = [...state.books];\r\n            }\r\n    \r\n            if(state.categories === 'All') {\r\n                for(let i = state.number; i < state.number + 10; i++) {\r\n                    newState.push(state.result[i]);\r\n                }\r\n                if(state.number + 10 === state.result.length) {\r\n                    return {...state, books: newState, loadMore: false, number: state.number + 10}\r\n                }\r\n                return {...state, books: newState, loadMore: true, number: state.number + 10};\r\n            }\r\n            else {\r\n                for(let i = state.number; i < state.result.length; i++) {\r\n                    if(state.result[i].volumeInfo?.categories !== undefined && state.result[i].volumeInfo?.categories.includes(state.categories)) { \r\n                        if(newState.length === state.books.length + 10) {\r\n                            return {...state, books: newState, loadMore: true, number: state.number + i};\r\n                        }\r\n                        newState.push(state.result[i]);\r\n                    }\r\n                    state.stepSearch += 1;\r\n                }\r\n                if(newState.length === 0) {\r\n                    return {...state, books: newState, loadMore: false}\r\n                }\r\n                if(state.stepSearch === state.result.length) {\r\n                    return {...state, books: newState, loadMore: false}\r\n                }\r\n                if(state.number + 10 === state.result.length) {\r\n                    return {...state, books: newState, loadMore: false, number: state.number + 10}\r\n                }\r\n                return {...state, books: newState, loadMore: true, number: state.number + 10};\r\n            }\r\n\r\n            \r\n\r\n\r\n            // console.log(state.result[0].volumeInfo?.categories);\r\n            // return {...state, books: [...state.result]}\r\n\r\n\r\n \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n} ","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n\r\n//API\r\nimport logger from \"redux-logger\";\r\n\r\n//state\r\nimport { booksReducer } from \"./booksReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    books: booksReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/index';\n\n\nimport './App.css';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}