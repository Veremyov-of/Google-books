{"version":3,"sources":["store/booksReducer.js","store/asyncActions/search.js","components/Search.jsx","components/Books.jsx","store/asyncActions/loadmore.js","components/Loadmore.jsx","components/Loading.jsx","components/ItemBook.jsx","App.js","store/index.js","index.js"],"names":["initialState","maxResults","totalItems","search","result","books","apiKey","process","categories","sorting","loading","number","stepSearch","INPUT_CHANGE","SEARCH","SORTING","CATEGORIES_CHANGE","LOADING","LOADMORE","RENDER_BOOKS","CLEAR_RESULT","renderBooksAction","type","loadingAction","searchAction","event","preventDefault","dispatch","fetch","then","response","json","payload","Search","useDispatch","useSelector","state","className","onSubmit","onChange","book","target","value","placeholder","length","Books","map","index","id","volumeInfo","title","to","src","undefined","imageLinks","thumbnail","alt","slice","authors","loadmoreAction","items","Loadmore","onClick","Loading","ItemBook","props","infoBook","textSnippet","searchInfo","item","smooth","App","basename","exact","path","AnimationDuration","rootReducer","combineReducers","action","step","newState","i","includes","push","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a0f3283.chunk.js","sourcesContent":["const initialState = {\r\n    maxResults: 30,\r\n    totalItems: 0,\r\n    search: '',\r\n    result: [],\r\n    books: [],\r\n    apiKey: process.env.REACT_APP_UNSPLASH_KEY,\r\n    categories: 'All',\r\n    sorting: 'relevance',\r\n    loading: false,\r\n    number: 0,\r\n    stepSearch: 0\r\n}\r\n\r\nconst INPUT_CHANGE = 'INPUT_CHANGE';\r\nconst SEARCH = 'SEARCH';\r\nconst SORTING = 'SORTING';\r\nconst CATEGORIES_CHANGE = 'CATEGORIES_CHANGE';\r\nconst LOADING = 'LOADING';\r\nconst LOADMORE = 'LOADMORE';\r\nconst RENDER_BOOKS = 'RENDER_BOOKS';\r\nconst CLEAR_RESULT = 'CLEAR_RESULT';\r\n\r\nexport const booksReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INPUT_CHANGE:\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            };\r\n\r\n        case SEARCH:\r\n            if(state.search) {\r\n                return {\r\n                    ...state,\r\n                    result: action.payload.items,\r\n                    totalItems: action.payload.totalItems,\r\n                    number: 0,\r\n                    books: [],\r\n                    step: 0\r\n                };\r\n            }\r\n            return {...state, result: []}\r\n            \r\n\r\n        case SORTING:\r\n            return {\r\n                ...state,\r\n                sorting: action.payload\r\n            };\r\n\r\n        case CATEGORIES_CHANGE:\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            };\r\n\r\n        case LOADING: \r\n                return {...state, loading: true};\r\n\r\n        case LOADMORE: \r\n            return {...state, result: [...action.payload]}\r\n        \r\n\r\n        case RENDER_BOOKS:\r\n            if(!state.search) {\r\n                return {...state, books: [], loading: false}\r\n            }\r\n\r\n            if(state.categories === 'All') {\r\n                return {...state, books: [...state.books, ...state.result], loading: false}\r\n            } else {\r\n                let newState = [];\r\n                for(let i = 0; i < state.result.length; i++) {\r\n                    if(state.result[i].volumeInfo?.categories !== undefined && state.result[i].volumeInfo?.categories.includes(state.categories)) {\r\n                        newState.push(state.result[i])\r\n                    }\r\n                }\r\n                return {...state, books: [...state.books, ...newState], loading: false}\r\n            }\r\n            \r\n\r\n        case CLEAR_RESULT:\r\n            return {...state, result: []}\r\n          \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const handleChangeAction = (payload) => ({ type: INPUT_CHANGE, payload });\r\nexport const handleSubmitAction = (payload) => ({ type: SEARCH, payload});\r\nexport const handleClickloadmoreAction = (payload) => ({ type: LOADMORE, payload});\r\nexport const sortingChangeAction = (payload) => ({ type: SORTING, payload});\r\nexport const categoriesChangeAction = (payload) => ({ type: CATEGORIES_CHANGE, payload});\r\nexport const renderBooksAction = () => ({ type: RENDER_BOOKS });\r\nexport const loadingAction = () => ({ type: LOADING });\r\nexport const clearResultAction = () => ({ type: CLEAR_RESULT});\r\n","import { renderBooksAction, handleSubmitAction, loadingAction } from \"../booksReducer\";\r\nexport const searchAction = (event, books) => {\r\n    event.preventDefault();\r\n    return function(dispatch) {\r\n        dispatch(loadingAction());\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=${books.maxResults}&orderBy=${books.sorting}`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(handleSubmitAction(json)))\r\n            .then(() => dispatch(renderBooksAction()))\r\n    }\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\n//style\r\nimport \"../css/Search.css\";\r\n\r\nimport { handleChangeAction, sortingChangeAction } from '../store/booksReducer';\r\nimport { categoriesChangeAction} from './../store/booksReducer';\r\nimport { searchAction } from './../store/asyncActions/search';\r\n\r\nexport default function Search() {\r\n    const dispatch = useDispatch();\r\n    const books = useSelector(state => state.books);\r\n\r\n    const handleChange = (event) => {\r\n        const book = event.target.value;\r\n        dispatch(handleChangeAction(book));\r\n      }\r\n\r\n    const sortingChange = (event) => {\r\n        const value = event.target.value;\r\n        dispatch(sortingChangeAction(value));\r\n    }\r\n\r\n    const categoriesChange = (event) => {\r\n        const value = event.target.value;\r\n        dispatch(categoriesChangeAction(value));\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <h1 className=\"search-title\">Search for books</h1>          \r\n\r\n            <form className='search-form' onSubmit={(event) => dispatch(searchAction(event,books))}>\r\n                <input className='search-input' onChange={handleChange} type=\"text\" value={books.search} placeholder=\"Search for Books\"/>\r\n                <button className='search-btn' type=\"submit\">Search</button>\r\n            </form>\r\n\r\n                                                                                                            \r\n            <div className='search-filter'>\r\n                <h3>sorting:</h3>\r\n                <select className='search-select' value={books.sorting} onChange={sortingChange} >\r\n                    <option value=\"relevance\">relevance</option>\r\n                    <option value=\"newest\">newest</option>\r\n                </select>\r\n\r\n                <h3>categories:</h3>\r\n                <select className='search-select' value={books.categories} onChange={categoriesChange} >\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Art\">Art</option>\r\n                    <option value=\"Biography & Autobiography\">Biography</option>\r\n                    <option value=\"Computers\">Computers</option>\r\n                    <option value=\"History\">History</option>\r\n                    <option value=\"Medical\">Medical</option>\r\n                    <option value=\"Poetry\">Poetry</option>\r\n                </select>\r\n            </div>\r\n            <h2>Found {books.books.length > 0 ? books.totalItems : '0'} results</h2>\r\n        </div>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//style\r\nimport '../css/Books.css'\r\n\r\nexport default function Books() {\r\n\r\n    const books = useSelector(state => state.books);\r\n\r\n    return (\r\n        <div className=\"books_wrapp\">\r\n            {books.books.map((book, index) => (\r\n                <Link id={book.volumeInfo?.title} className=\"link-book\" to={`${book.volumeInfo?.title}`} key={index}>\r\n                    <img \r\n                        src={book.volumeInfo?.imageLinks !== undefined ?\r\n                        book.volumeInfo.imageLinks.thumbnail : './img/noPicture.png'} \r\n                        alt={book.volumeInfo?.title}\r\n                    />\r\n                    <div className=\"book_info\">\r\n                        <h2 className=\"book_title\">\r\n                            {book.volumeInfo?.title === undefined ? '' : book.volumeInfo.title.length < 60?\r\n                            book.volumeInfo?.title : book.volumeInfo.title.slice(0,60) + '...'}\r\n                        </h2>\r\n                        <p className=\"book_categories\">{book.volumeInfo?.categories !== undefined ? book.volumeInfo.categories : ''}</p>\r\n                        <p className=\"book_authors\">{book.volumeInfo?.authors !== undefined ? book.volumeInfo.authors[0] : ''}</p>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import { loadingAction, renderBooksAction, clearResultAction, handleClickloadmoreAction} from './../booksReducer';\r\n\r\nexport const loadmoreAction = (books) => {\r\n    return function(dispatch) {\r\n        dispatch(loadingAction());\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=${books.maxResults}&orderBy=${books.sorting}&startIndex=${books.books.length}`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(handleClickloadmoreAction(json.items)))\r\n            .then(() => dispatch(renderBooksAction()))\r\n            .then(() => dispatch(clearResultAction()))\r\n    }\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport \"../css/Loadmore.css\";\r\nimport { loadmoreAction } from '../store/asyncActions/loadmore';\r\n// import { renderBooksAction } from '../store/booksReducer';\r\n// import { clearResultAction } from './../store/booksReducer';\r\n\r\nexport default function Loadmore() {\r\n    const dispatch = useDispatch();\r\n    const books = useSelector(state => state.books);\r\n\r\n    // async function showBooks() {\r\n    //     loadingBooks()\r\n    //     let result = [];\r\n    //     await fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=${books.maxResults}&orderBy=${books.sorting}&startIndex=${books.books.length}`)\r\n    //         .then(response => response.json())\r\n    //         .then(json => result = json.items)\r\n    //         .then(() => dispatch(loadmoreAction(result)))\r\n    //         .then(() => dispatch(renderBooksAction()))\r\n    //         .then(() => dispatch(clearResultAction()))\r\n    // }\r\n\r\n    // const loadingBooks = () => {\r\n    //     dispatch({type: 'LOADING'})\r\n    // }    \r\n    \r\n    return (\r\n        <div  className=\"loadmore-wrapp\">\r\n            <button className=\"loadmore-btn\" onClick={() => dispatch(loadmoreAction(books))}>Load more</button>\r\n        </div>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\n\r\n//style\r\nimport '../css/Loading.css'\r\n\r\nexport default function Loading() {\r\n    const loading = useSelector(state => state.books.loading)\r\n    return (\r\n        <div className={`loading_wrapp ${loading ? 'loading_wrapp-active' : ''}`}>\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    );\r\n}","import { HashLink as Link } from 'react-router-hash-link';\r\n\r\n//style\r\nimport '../css/ItemBook.css'\r\n\r\nexport default function ItemBook(props) {\r\n    const infoBook = props.book.volumeInfo;\r\n    const textSnippet = props.book.searchInfo?.textSnippet;\r\n    return(\r\n        <div className=\"section-itemBook\">\r\n           <div className=\"itemBook\">\r\n                <img className=\"itemBook-img\" src={infoBook?.imageLinks !== undefined ?\r\n                        infoBook.imageLinks.thumbnail : './img/noPicture.png'}\r\n                        alt=\"img\"/>\r\n                <div className=\"itemBook-info\">\r\n                    <h1 className=\"itemBook-title\">{infoBook?.title}</h1>\r\n                    <p className=\"itemBook-categories\">{infoBook?.categories}</p>\r\n                    <p className=\"itemBook-authors\">{infoBook?.authors.map(item => item + ', ')}</p>\r\n                </div>\r\n                <div className=\"itemBook-wrapp\">\r\n                    <p className=\"itemBook-textSnippet\">{textSnippet}</p>\r\n                </div>\r\n                <Link smooth className=\"itemBook-link\" to={`/#${infoBook?.title}`}>back</Link>\r\n           </div>\r\n        </div>\r\n    );\r\n}","\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//style\nimport \"./css/App.css\";\n\n//npm\nimport {VerticleButton as ScrollUpButton} from \"react-scroll-up-button\";\n\n//components\nimport Search from './components/Search';\nimport Books from './components/Books';\nimport Loadmore from './components/Loadmore';\nimport Loading from './components/Loading';\nimport ItemBook from './components/ItemBook';\n\n\n\n\nfunction App() {\n\n  const books = useSelector(state => state.books);\n\n  return(\n    <Router basename=\"/Google-books\">\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n              <Search />\n              <Books />\n              {books.books.length > 0 ? <Loadmore /> : ''}\n              <Loading />\n          </Route>\n          {books.books.map((book, index) =>\n            <Route key={index} path={`/${book.volumeInfo?.title}`}>\n              <ItemBook book={book}/>\n            </Route>\n          )}\n        </Switch>\n        <ScrollUpButton\n          AnimationDuration={494}\n        />\n      </div>\n    </Router>\n  );\n}\n\n// function App() {\n\n//   const dispatch = useDispatch();\n//   const books = useSelector(state => state.books);\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (event) => {\n//     const book = event.target.value;\n//     dispatch({type: 'INPUT_CHANGE', payload: book});\n//   }\n\n//   async function handleSubmit(event) {\n//     setLoading(true);\n//     event.preventDefault();\n//     let result = [];\n//     await fetch(`https://www.googleapis.com/books/v1/volumes?q=${books.search}&key=${books.apiKey}&maxResults=30&orderBy=${books.sorting}`)\n//       .then(response => response.json())\n//       .then(json => result = json.items)\n//       .then(() => setLoading(false))\n    \n//     dispatch({type: 'SEARCH', payload: result});\n//     renderBooks();\n//   }\n\n//   const sortingChange = (event) => {\n//     const value = event.target.value;\n//     dispatch({type: 'SORTING', payload: value});\n//   }\n\n//   const categoriesChange = (event) => {\n//     const value = event.target.value;\n//     dispatch({type: 'CATEGORIES_CHANGE', payload: value});\n//   }\n\n//   const renderBooks = () => {\n//     dispatch({type: 'RENDER_BOOKS'});\n//   }\n\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <input onChange={handleChange} className=\"input\" type=\"text\" placeholder=\"Search for Books\"/>\n//         <button type=\"submit\">Search</button>\n//       </form>\n\n                                                                                                         \n//       <select value={books.sorting} onChange={sortingChange} >\n//         <option value=\"relevance\">relevance</option>\n//         <option value=\"newest\">newest</option>\n//       </select>\n\n//       <select value={books.categories} onChange={categoriesChange} >\n//         <option value=\"All\">All</option>\n//         <option value=\"Art\">Art</option>\n//         <option value=\"Biography & Autobiography\">Biography</option>\n//         <option value=\"Computers\">Computers</option>\n//         <option value=\"History\">History</option>\n//         <option value=\"Medical\">Medical</option>\n//         <option value=\"Poetry\">Poetry</option>\n//       </select>\n\n//       {books.books.map((book, index) => (\n//         <div key={index}>\n//           <h4>{book.volumeInfo.categories}</h4>\n//           <img src={book.volumeInfo.imageLinks?.thumbnail} alt={book.volumeInfo.title}/>\n//         </div>\n//       ))}\n//       {loading ? <h2>loading...</h2> : ''}\n//     </div>\n//   );\n// }\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//API\r\nimport logger from \"redux-logger\";\r\n\r\n//state\r\nimport { booksReducer } from \"./booksReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    books: booksReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk,logger));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}